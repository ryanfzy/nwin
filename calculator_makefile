VPATH = ..
BINDIR = bin
OBJDIR = obj
NGFINC = include/ngf

LIB_OBJS = obj/structs.o obj/list.o obj/dict.o obj/dict_prvt.o obj/dictiter.o obj/stack.o obj/utils.o
FE_OBJS = obj/feinfo.o obj/treeviewinfo.o obj/tviteminfo.o obj/tbinfo.o obj/gridinfo.o obj/btninfo.o obj/borderinfo.o obj/stackpanelinfo.o
FRMWRK_OBJS = obj/zaml_structs.o $(FE_OBJS) obj/evthandler.o obj/property.o obj/attachedproperty.o obj/evtinfo.o obj/dcitem.o
CTL_OBJS = obj/button.o obj/textblock.o 
DEMO_OBJS = obj/demo_datacontext.o obj/demo_ui.o
UTIL_OBJS = obj/calculation.o obj/febuilder.o
MAINWIN_OBJS = obj/calculator.o
LAYOUT_OBJS = obj/grid.o  obj/treeview.o obj/border.o 

# $@ means the target
# $< means the first prerequisite
STD_OPTS = -Wall -std=c99 -Iinclude -I. -I.. -I../ngf/include -o $@ -c $<
WIN_OPTS = $(STD_OPTS) -DUNICODE

OBJECTS = $(LIB_OBJS) $(FRMWRK_OBJS) $(CTL_OBJS) $(DEMO_OBJS) $(UTIL_OBJS) $(MAINWIN_OBJS) $(LAYOUT_OBJS)

$(BINDIR)/calculator.exe : $(OBJECTS) | $(BINDIR) 
	gcc -Wall -o $@ $(OBJECTS) -mwindows
# static pattern rule, % refers to the object name
$(LIB_OBJS) : obj/%.o : lib/%.c
	gcc $(STD_OPTS)
$(FRMWRK_OBJS) : obj/%.o : ngf/src/%.c 
	gcc $(STD_OPTS)
$(CTL_OBJS) : obj/%.o : src/controls/%.c
	gcc $(WIN_OPTS)
$(LAYOUT_OBJS) : obj/%.o : src/layouts/%.c
	gcc $(WIN_OPTS)
$(UTIL_OBJS) $(DEMO_OBJS) : obj/%.o : src/%.c
	gcc $(STD_OPTS)
obj/calculator.o : src/calculator.c
	gcc $(WIN_OPTS)

# this is an order-only prerequisite, it creates the obj folder if needed
$(OBJECTS): | $(OBJDIR)
$(OBJDIR): | $(NGFINC)
	mkdir $(OBJDIR)
$(BINDIR):
	mkdir $(BINDIR)
$(NGFINC):
	cmd /c "mklink /j include\ngf ..\ngf\include"

clean:
	rm -fv calculator.exe *.o -r $(OBJDIR)

